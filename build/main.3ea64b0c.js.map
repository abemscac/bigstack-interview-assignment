{"version":3,"file":"build/main.3ea64b0c.js","mappings":"yIAgBO,IAAMA,EAAW,WACtB,OACEC,EAAAA,cAACC,EAAAA,IAAe,CACdC,OAAQ,SAAAC,GAAA,IAAGC,EAAiBD,EAAjBC,kBAAmBC,EAAoBF,EAApBE,qBAAoB,OAChDL,EAAAA,cAACM,EAAAA,IAAM,CAAC,aAAW,6BACjBN,EAAAA,cAACO,EAAAA,IAAa,MACdP,EAAAA,cAACQ,EAAAA,IAAgB,CACf,aAAW,YACXC,eAAa,EACbC,QAASL,EACTM,SAAUP,IAEZJ,EAAAA,cAACY,EAAAA,IAAO,CACN,aAAW,kBACXC,QAAM,EACNC,SAAUV,EACVW,eAAgBV,GAEhBL,EAAAA,cAACgB,EAAAA,IAAY,KACXhB,EAAAA,cAACiB,EAAAA,IAAW,CAACC,WAAYC,EAAAA,GAAMC,OAAK,GAAC,QAGrCpB,EAAAA,cAACqB,EAAAA,IAAc,QAGnBrB,EAAAA,cAAA,OAAKsB,UAAU,8BACbtB,EAAAA,cAACuB,EAAAA,GAAI,CAACC,GAAG,KACPxB,EAAAA,cAAA,OACEyB,IC5ChB,gDD6CgBC,IAAI,OACJC,MAAM,OACNC,MAAO,CAAEC,WAAY,WAGzB7B,EAAAA,cAAA,QAAMsB,UAAU,8BAChBtB,EAAAA,cAAC8B,EAAAA,IAAU,CACTC,GAAIR,EAAAA,GACJC,GAAG,IACHQ,OAAO,GACPJ,MAAO,CAAEK,YAAa,WAErBC,8BAGE,GAIjB,E,oBEtDMC,EAAqB,CACzBC,KAAM,IASKC,EAAa,SAAAC,GACxB,IAAQC,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAErB,OACEzC,EAAAA,cAAA,OAAKsB,UAAU,eACbtB,EAAAA,cAAA,OAAKsB,UAAU,aAAaiB,EAAKJ,IACjCnC,EAAAA,cAAA,OAAKsB,UAAU,aACbtB,EAAAA,cAAA,MAAIsB,UAAU,gBAAgBkB,GAC9BxC,EAAAA,cAAA,SAAOsB,UAAU,mBAAmBmB,IAI5C,E,0LC5BA,IA0BaC,EA1BY,WACvB,IAAIC,OAAUC,EAsBd,OAlBED,EAAU,kBAAME,EAAQ,KAA8B,GAkBjDC,EAAAA,EAAAA,IAAO,gBAAiBH,EACjC,E,k1EC1BO,I,UCOMI,EAAc,SAAAT,GACzB,IAAQU,EAAaV,EAAbU,SAER,MAA2B,oBAAbC,SACV,MACAC,EAAAA,EAAAA,cAAaF,EAAUC,SAASE,KACtC,ECKMC,EAAwB,SAAAC,GAAU,SAAAC,OAAOD,EAAU,UA+BnDE,EAAc,mBAMPC,EAAa,SAAAC,GACxB,OAAOF,EAAYG,KAAKD,EAC1B,E,+hCCjDO,IAAME,EAAW,SAAArB,GACtB,IAAQsB,EAA2CtB,EAA3CsB,OAAQC,EAAmCvB,EAAnCuB,OAAkBC,EAAiBxB,EAA3ByB,SAEcC,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/BC,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAEhBK,GAAeC,EAAAA,EAAAA,UAAQ,WAC3B,OAAIV,EAAOW,IAAIJ,GACN,sBACGX,EAAWW,QAGrB,EAFO,sCAIX,GAAG,CAACA,EAAOP,IAcX,OACE5D,EAAAA,cAAA,QAAM+D,SAbS,SAAAS,GACfA,EAAEC,iBACEN,IAAUE,IACZP,EAAaK,GACbC,EAAS,IAEb,GAQIpE,EAAAA,cAAC0E,EAAAA,IAAS,CACR,8BACAC,GAAG,YACHrD,UAAU,iBACVsD,WAAW,EACXC,YAAY,eACZC,UAAU,eACVC,UAAWV,EACXW,YAAaX,EACbjC,KAAK,KACL+B,MAAOA,EACPN,OAAQA,EACRoB,SAlBW,SAAAT,GACfJ,EAASI,EAAEU,OAAOf,MACpB,IAoBF,E,g4CC1CO,IAAMgB,EAAoB,SAAA7C,GAC/B,IAAQ8C,EAA6D9C,EAA7D8C,KAAMC,EAAuD/C,EAAvD+C,SAAkBC,EAAqChD,EAA7CiD,OAA6BC,EAAgBlD,EAAzBmD,QAERzB,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA7BwB,EAAI1B,EAAA,GAAE2B,EAAO3B,EAAA,GACd4B,GAAsBC,EAAAA,EAAAA,QAAO,IAE7BjC,GAASU,EAAAA,EAAAA,UAAQ,kBAAM,IAAIwB,IAAIJ,EAAK,GAAE,CAACA,KAE7CK,EAAAA,EAAAA,YAAU,WACJX,SAAQC,GAAAA,EAAUK,KACpBC,EAAOK,EAAKX,EAASK,OAGrBE,EAAoBK,QAAU,EAElC,GAAG,CAACb,EAAMC,aAAQ,EAARA,EAAUK,OAEpB,IAuCMD,EAAU,SAAAS,GACd,IAAIC,GAAU,EAEVD,IACFC,EACEd,EAASK,KAAKU,SAAWV,EAAKU,SAC7BV,EAAKW,OAAM,SAAC5C,EAAK6C,GAAK,OAAK7C,IAAQ4B,EAASK,KAAKY,EAAM,KAI1DH,IACCI,QAAQ,+DAKXf,GACF,EAEA,OACExF,EAAAA,cAAC+C,EAAW,KACV/C,EAAAA,cAACwG,EAAAA,IAAK,CACJlF,UAAU,sBACV8D,KAAMA,EACNqB,cAAc,EACdC,4BAA4B,EAC5BC,aAAY,gBAAArD,OAAkB+B,aAAQ,EAARA,EAAUuB,MACxCC,eAAgB,kBAAMpB,GAAQ,EAAK,GAEnCzF,EAAAA,cAAA,OAAKsB,UAAU,QAAO,mEAGtBtB,EAAAA,cAAA,OAAKsB,UAAU,gBACZoE,EAAKoB,KAAI,SAACrD,EAAK6C,GAAK,OACnBtG,EAAAA,cAAC+G,EAAAA,eAAc,CACbC,IAAKvD,EACLwD,KAAK,YACLxB,QAAS,kBAxEH,SAAAa,GAChBX,GAAQ,SAAAuB,GACN,IAAMC,EAAOnB,EAAOkB,GAEpB,OADAC,EAAQC,OAAOd,EAAO,GACfa,CACT,GACF,CAkE2BE,CAAUf,EAAM,GAE9B7C,EACc,IAEnBzD,EAAAA,cAAC2D,EACC,CACAqD,IAAK5B,EACLxB,OAAQA,EACRC,OAtEa,SAAAW,GACrBoB,EAAoBK,QAAUzB,EAAEU,OAAOf,KACzC,EAqEUJ,SAtFK,SAAAuD,GACb3B,GAAQ,SAAAuB,GAAI,SAAA5D,OAAA0C,EAAQkB,GAAI,CAAEI,GAAM,GAClC,KAuFMtH,EAAAA,cAAA,OAAKsB,UAAU,eACbtB,EAAAA,cAACuH,EAAAA,IAAM,CAACjG,UAAU,cAAcZ,QAvEzB,WACb,IAAMyG,EAAOnB,EAAON,GAIlBE,EAAoBK,UACnBrC,EAAOW,IAAIqB,EAAoBK,UAChCzC,EAAWoC,EAAoBK,UAE/BkB,EAAQK,KAAK5B,EAAoBK,SFfd,SAAC5C,EAAYqC,GACpC,GAAI,iBAAkB+B,OAAQ,CAC5B,IAAMT,EAAM5D,EAAsBC,GAClCqE,aAAaC,QAAQX,EAAKY,KAAKC,UAAUnC,GAC3C,CACF,CEaIoC,CAAUzC,EAASV,GAAIwC,GACvB7B,EAAW6B,GACX1B,GAAQ,EACV,GAwDyD,UAO3D,ECrHasC,EAAe,SAAAzF,GAC1B,IAAQ0F,EAAoD1F,EAApD0F,SAAUC,EAA0C3F,EAA1C2F,SAAUC,EAAgC5F,EAAhC4F,aAAcC,EAAkB7F,EAAlB6F,cAEpCC,GAAmB9D,EAAAA,EAAAA,UACvB,kBAAM,IAAIwB,IAAIkC,EAASK,QAAQ,GAC/B,CAACL,EAASK,UAGZ,OACErI,EAAAA,cAACsI,EAAAA,IAAU,CACThH,UAAU,qBACViH,KAAK,QACLC,MAAM,SACNpG,KAAK,KACLqG,cAAc,gBAEdzI,EAAAA,cAAA,OAAKsB,UAAU,yBACbtB,EAAAA,cAAC0I,EAAAA,IAAM,CACLpH,UAAU,oBACVuD,YAAY,SACZC,UAAU,SACV1C,KAAK,KACL+B,MAAO6D,EAASpB,KAChB3B,SAAUiD,IAEZlI,EAAAA,cAAA,OAAKsB,UAAU,gBACZ2G,EAASnB,KAAI,SAAA6B,GAAM,OAClB3I,EAAAA,cAAC4I,EAAAA,IAAQ,CACP5B,IAAK2B,EACLhE,GAAIgE,EACJ7D,UAAW6D,EACXE,QAAST,EAAiB7D,IAAIoE,GAC9B1D,SAAU,SAAAT,GAAC,OAAI2D,EAAc3D,EAAGmE,EAAO,GACvC,MAMd,E,gBCvCaG,EAAa,SAAAxG,GACxB,IAAQyG,EAAsBzG,EAAtByG,KAAIC,EAAkB1G,EAAhBF,KAAAA,OAAI,IAAA4G,EAAG,KAAIA,EAEnBC,EAAYF,EAAK,IAAM,GACvBG,EAAaD,EAAUE,WAAW,GAXtB,EAalB,OACEnJ,EAAAA,cAAA,QAAMsB,UAAW8H,IAAW,cAAehH,EAAM,SAAFkB,OAAW4F,KACvDD,EAGP,ECVaI,EAAc,SAAA/G,GACzB,IAAQ0F,EAAiD1F,EAAjD0F,SAAUsB,EAAuChH,EAAvCgH,MAAOpB,EAAgC5F,EAAhC4F,aAAcC,EAAkB7F,EAAlB6F,cAEjCoB,GAAgBjF,EAAAA,EAAAA,UACpB,kBAAM,IAAIwB,IAAIkC,EAASK,QAAQ,GAC/B,CAACL,EAASK,UAGZ,OACErI,EAAAA,cAACsI,EAAAA,IAAU,CACThH,UAAU,oBACViH,KAAK,QACLC,MAAM,QACNpG,KAAK,KACLqG,cAAc,gBAEdzI,EAAAA,cAAA,OAAKsB,UAAU,wBACbtB,EAAAA,cAAC0I,EAAAA,IAAM,CACLpH,UAAU,oBACVuD,YAAY,SACZC,UAAU,SACV1C,KAAK,KACL+B,MAAO6D,EAASpB,KAChB3B,SAAUiD,IAEZlI,EAAAA,cAAA,OAAKsB,UAAU,gBACZgI,EAAMxC,KAAI,SAAAiC,GAAI,OACb/I,EAAAA,cAAA,OAAKgH,IAAK+B,EAAMzH,UAAU,sBACxBtB,EAAAA,cAAC4I,EAAAA,IAAQ,CACPjE,GAAIoE,EACJjE,UAAW,GACX+D,QAASU,EAAchF,IAAIwE,GAC3B9D,SAAU,SAAAT,GAAC,OAAI2D,EAAc3D,EAAGuE,EAAK,IAEvC/I,EAAAA,cAAA,SAAOsB,UAAU,sBAAsBkI,QAAST,GAC9C/I,EAAAA,cAAC8I,EAAU,CAACC,KAAMA,EAAM3G,KAAK,OAC7BpC,EAAAA,cAAA,QAAMsB,UAAU,aAAayH,IAE3B,MAMlB,E,2sMChDO,IAAMU,GAAwB,WAAH,MAAU,CAC1C7C,KAAM,GACN+B,OAAQ,CACN/B,KAAM,GACNyB,QAAS,IAEXqB,MAAO,CACL9C,KAAM,GACNyB,QAAS,IAEZ,EAQYsB,GAAkB,SAAArH,GAC7B,IAAQsH,EAA0CtH,EAA1CsH,cAAeC,EAA2BvH,EAA3BuH,aAAc5E,EAAa3C,EAAb2C,SAE0BjB,EAAAC,IAA/BC,EAAAA,EAAAA,UAASuF,IAAsB,GAAxDzB,EAAQhE,EAAA,GAAE8F,EAAW9F,EAAA,GAEtB+F,EAAiB,SAAAC,GACrBF,EAAYE,GACZ/E,EAAS+E,EACX,EAaAC,ECzCqC,SAAA5B,GACrC,IAAQL,EAAuBK,EAAvBL,SAAU/C,EAAaoD,EAAbpD,SAmClB,MAAO,CACLiF,mBA/ByB,SAAA1F,GACzB,IAAMwF,EAAWG,EAAA,GACZnC,GAELgC,EAAYrB,OAAO/B,KAAOpC,EAAEU,OAAOf,MACnCc,EAAS+E,EACX,EA0BEI,oBApB0B,SAAC5F,EAAGmE,GAC9B,IAAQE,EAAYrE,EAAEU,OAAd2D,QACFmB,EAAWG,EAAA,GACZnC,GAECK,EAAOrC,EAAOgE,EAAYrB,OAAON,SACvC,GAAIQ,EACFR,EAAQb,KAAKmB,OACR,CACL,IAAMrC,EAAQ+B,EAAQgC,QAAQ1B,GAC1BrC,GAAS,GACX+B,EAAQjB,OAAOd,EAAO,EAE1B,CACA0D,EAAYrB,OAAON,QAAUA,EAC7BpD,EAAS+E,EACX,EAMF,CDCsDM,CAAwB,CAC1EtC,SAAAA,EACA/C,SAAU8E,IAFJG,EAAkBD,EAAlBC,mBAAoBE,EAAmBH,EAAnBG,oBAK5BG,EE9CoC,SAAAlC,GACpC,IAAQL,EAAuBK,EAAvBL,SAAU/C,EAAaoD,EAAbpD,SAmClB,MAAO,CACLuF,kBA/BwB,SAAAhG,GACxB,IAAMwF,EAAWG,EAAA,GACZnC,GAELgC,EAAYN,MAAM9C,KAAOpC,EAAEU,OAAOf,MAClCc,EAAS+E,EACX,EA0BES,mBApByB,SAACjG,EAAGkF,GAC7B,IAAQb,EAAYrE,EAAEU,OAAd2D,QACFmB,EAAWG,EAAA,GACZnC,GAECK,EAAOrC,EAAOgE,EAAYN,MAAMrB,SACtC,GAAIQ,EACFR,EAAQb,KAAKkC,OACR,CACL,IAAMpD,EAAQ+B,EAAQgC,QAAQX,GAC1BpD,GAAS,GACX+B,EAAQjB,OAAOd,EAAO,EAE1B,CACA0D,EAAYN,MAAMrB,QAAUA,EAC5BpD,EAAS+E,EACX,EAMF,CFMoDU,CAAuB,CACvE1C,SAAAA,EACA/C,SAAU8E,IAFJS,EAAiBD,EAAjBC,kBAAmBC,EAAkBF,EAAlBE,mBAK3B,OACEzK,EAAAA,cAAA,OAAKsB,UAAU,oBACbtB,EAAAA,cAAC0I,EAAAA,IAAM,CACLpH,UAAU,oBACVuD,YAAY,0BACZC,UAAU,0BACVX,MAAO6D,EAASpB,KAChB3B,SAzBe,SAAAT,GACnB,IAAMwF,EAAWG,EAAAA,EAAA,GACZnC,GAAQ,IACXpB,KAAMpC,EAAEU,OAAOf,QAEjB4F,EAAeC,EACjB,IAqBIhK,EAAAA,cAAC+H,EAAY,CACXC,SAAUA,EAASW,OACnBV,SAAU2B,EACV1B,aAAcgC,EACd/B,cAAeiC,IAEjBpK,EAAAA,cAACqJ,EAAW,CACVrB,SAAUA,EAAS0B,MACnBJ,MAAOO,EACP3B,aAAcsC,EACdrC,cAAesC,IAIvB,EGpEaE,GAAmB,SAAArI,GAC9B,IAAQsH,EAAwDtH,EAAxDsH,cAAeC,EAAyCvH,EAAzCuH,aAAce,EAA2BtI,EAA3BsI,uBAErC,OACE5K,EAAAA,cAAA,OAAKsB,UAAU,qBACbtB,EAAAA,cAAC2J,GAAe,CACdC,cAAeA,EACfC,aAAcA,EACd5E,SAAU2F,IAEZ5K,EAAAA,cAACuH,EAAAA,IAAM,CAACjG,UAAU,sBAAsBiH,KAAK,QAAQrH,WAAY2J,EAAAA,IAAK,gBAK5E,E,2ECrBaC,GAAiB,SAACtJ,GAA0B,IAAtBuJ,EAAIC,UAAA5E,OAAA,QAAAxD,IAAAoI,UAAA,GAAAA,UAAA,GAAG,IAAIC,KACtCC,EAAS,IAAID,KAAKzJ,GAElB2J,GADW,IAAIF,KAAKF,GACAK,UAAYF,EAAOE,WAAa,IACpDC,EAAUC,KAAKC,MAAMJ,EAAU,IAErC,GAAIK,OAAOC,MAAMJ,GACf,MAAO,MACF,GAAIF,EAAU,EAEnB,OADAO,GAAQC,KAAK,mCACN,QAEP,IAAMC,EAAQN,KAAKC,MAAMF,EAAU,IAC7BQ,EAAOP,KAAKC,MAAMK,EAAQ,IAC1BE,EAAQR,KAAKC,MAAMM,EAAO,GAC1BE,EAAST,KAAKC,MAAMM,EAAO,IAC3BG,EAAQV,KAAKC,MAAMQ,EAAS,IAE7BE,EAAiB,GAAXC,EAAe,EAE1B,GAAIF,EAAQ,EACVC,EAAO,OACPC,EAASF,OACJ,GAAID,EAAS,EAClBE,EAAO,QACPC,EAASH,OACJ,GAAID,EAAQ,EACjBG,EAAO,OACPC,EAASJ,OACJ,GAAID,EAAO,EAChBI,EAAO,MACPC,EAASL,OACJ,GAAID,EAAQ,EACjBK,EAAO,OACPC,EAASN,MACJ,MAAIP,EAAU,GAInB,MAAO,WAHPY,EAAO,SACPC,EAASb,CAGX,CAOA,OAJIa,EAAS,IACXD,GAAQ,KAGH,GAAP3I,OAAU4I,EAAM,KAAA5I,OAAI2I,EAAI,OAE5B,ECnCME,GAAgB,CACpBC,OAAQ,QACRC,SAAU,OACVC,QAAS,YACTC,SAAU,MACVC,QAAS,aAWEC,GAAc,SAAAnK,GACzB,IAiEUqG,EAAQ+D,EAAaC,EAjEvBtH,EAAkC/C,EAAlC+C,SAAUuH,EAAwBtK,EAAxBsK,SAAUC,EAAcvK,EAAduK,UAEtBC,GAAUxI,EAAAA,EAAAA,UACd,kBAAMe,EAAS0H,SAASC,QAAQ,YAAa,GAAG,GAChD,CAAC3H,EAAS0H,WA2CNE,EAAiB,SAAAC,GACrB,IAAMC,EAAU,GAAH7J,OAAM4J,EAAK,gBAClBE,EAAOF,EAAQ,GAAK,MAAQ,GAAH5J,OAAM4J,EAAK,KAC1C,OACElN,EAAAA,cAACqN,EAAAA,IAAO,CAAC/L,UAAU,mBAAmBkH,MAAO2E,GAC3CnN,EAAAA,cAACsN,EAAAA,IAAG,CACFhM,UAAU,kCACV2F,KAAK,YACL7E,KAAK,KACL1B,QAASmM,GAERO,GAIT,EAuBA,OACEpN,EAAAA,cAACuN,EAAAA,IAAaX,EACZ5M,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,aACnBtB,EAAAA,cAACyN,EAAAA,GAAe,OAElBzN,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,aAjFrBtB,EAAAA,cAAA,QAAMsB,UAAU,aACdtB,EAAAA,cAAA,KAAGsB,UAAU,iBAAiB+D,EAASuB,MACvC5G,EAAAA,cAAA,QAAMsB,UAAU,iBX3CW,SAAA+D,GACjC,IAAKA,EACH,MAAO,qBAGT,IACcqI,EAEVrI,EAFFsI,SAAYD,OAAME,EAEhBvI,EADFwI,aAAgBC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAAQC,EAAIJ,EAAJI,KAGhC,MAAO,GAAP1K,OAAUwK,EAAI,YAAAxK,OAAWyK,EAAM,UAAAzK,OAAS0K,EAAI,UAAA1K,OAASoK,EACvD,CWgCyCO,CAAoB5I,IACrDrF,EAAAA,cAAA,QAAMsB,UAAU,kBAAkB+D,EAAS6I,SA+E7ClO,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,gBAClBwL,GACC9M,EAAAA,cAACqN,EAAAA,IAAO,CAAC/L,UAAU,kBAAkBkH,MAAOsE,GAC1C9M,EAAAA,cAACsN,EAAAA,IAAG,CAAChM,UAAU,cAAc2F,KAAK,YAAY7E,KAAK,MAChD0K,KAKT9M,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,gBACnBtB,EAAAA,cAAA,QAAMsB,UAAU,gBAAgB+D,EAAS8I,QAAQ/H,SAEnDpG,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,qBAClB+D,EAAS+I,cAEZpO,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,oBAAoB+D,EAASgJ,aAClDrO,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,aA1FN,WACjB,IAAQoE,EAASL,EAATK,KACR,GAAIA,EAAKU,OAAQ,CACf,IAAMkI,EAAgB5I,EAAKU,OA7BH,EA8BxB,OACEpG,EAAAA,cAAA,QAAMsB,UAAU,aACboE,EAAK6I,MAAM,EAhCQ,GAgCkBzH,KAAI,SAAArD,GAAG,OAC3CzD,EAAAA,cAACqN,EAAAA,IAAO,CAACrG,IAAKvD,EAAKnC,UAAU,cAAckH,MAAO/E,GAChDzD,EAAAA,cAACsN,EAAAA,IAAG,CACFhM,UAAU,eACV2F,KAAK,YACL7E,KAAK,KACL1B,QAASmM,GAERpJ,GAEK,IAEX6K,EAAgB,GAAKrB,EAAeqB,GAG3C,CACE,OACEtO,EAAAA,cAAA,UAAQsB,UAAU,iBAAiBZ,QAASmM,GAAW,SAK7D,CA8DsC2B,IAClCxO,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,cACnBtB,EAAAA,cAAC8I,EAAU,CAACC,KAAM1D,EAAS0D,QAE7B/I,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,iBA9CfqH,EAAmCtD,EAAnCsD,OAAQ+D,EAA2BrH,EAA3BqH,YAAaC,EAActH,EAAdsH,UAExBD,EAKH1M,EAAAA,cAAA,QAAMsB,UAAU,gBACdtB,EAAAA,cAAA,QACEsB,UAAW8H,IAAW,eAAgB,CACpCkD,QAAoB,YAAX3D,KAGVgE,EAAY7B,GAAe6B,GAAa,SAE1CD,GAAe1M,EAAAA,cAACyO,GAAAA,GAAI,CAACnN,UAAU,eAZ3B,OA4CPtB,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,kBAChB+D,EAASqH,aAAe5B,GAAezF,EAASqH,cAErD1M,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,eACnBtB,EAAAA,cAACsN,EAAAA,IAAG,CACFhM,UAAU,aACV2F,KAAMkF,GAAc9G,EAASsD,QAC7BvG,KAAK,MAEJiD,EAASsD,SAGd3I,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,eACnBtB,EAAAA,cAAC0O,EAAAA,IAAY,CACXpN,UAAU,uBACV,aAAW,gBACXqN,SAAS,EACTzN,WAAY0N,GAAAA,GAEZ5O,EAAAA,cAAC6O,EAAAA,IAAgB,CAACC,SAAS,uBAC3B9O,EAAAA,cAAC6O,EAAAA,IAAgB,CAACC,SAAS,WAC3B9O,EAAAA,cAAC6O,EAAAA,IAAgB,CAACC,SAAS,cAC3B9O,EAAAA,cAAC6O,EAAAA,IAAgB,CAACC,SAAS,gBAC3B9O,EAAAA,cAAC6O,EAAAA,IAAgB,CAACC,SAAS,eAC3B9O,EAAAA,cAAC6O,EAAAA,IAAgB,CAACC,SAAS,mBAAmBC,YAAY,IAC1D/O,EAAAA,cAAC6O,EAAAA,IAAgB,CACfC,SAAS,sBACTE,cAAc,IAEhBhP,EAAAA,cAAC6O,EAAAA,IAAgB,CACfC,SAAS,UACTC,YAAY,EACZE,UAAU,MAMtB,E,uOC7KA,IAAMC,GAAU,CACd,CACElI,IAAK,eACLmI,OAAQ,IAEV,CACEnI,IAAK,OACLmI,OAAQ,QAEV,CACEnI,IAAK,WACLmI,OAAQ,WAEV,CACEnI,IAAK,UACLmI,OAAQ,WAEV,CACEnI,IAAK,eACLmI,OAAQ,gBAEV,CACEnI,IAAK,cACLmI,OAAQ,eAEV,CACEnI,IAAK,OACLmI,OAAQ,QAEV,CACEnI,IAAK,OACLmI,OAAQ,SAEV,CACEnI,IAAK,YACLmI,OAAQ,WAEV,CACEnI,IAAK,cACLmI,OAAQ,WAEV,CACEnI,IAAK,SACLmI,OAAQ,UAEV,CACEnI,IAAK,gBACLmI,OAAQ,KAWCC,GAAiB,SAAA9M,GAC5B,IAAQ+M,EAA2C/M,EAA3C+M,UAAWC,EAAgChN,EAAhCgN,UAAWC,EAAqBjN,EAArBiN,MAAO1C,EAAcvK,EAAduK,UA0CrC,OAAI0C,EACKvP,EAAAA,cAAA,OAAKsB,UAAU,SAASiO,EAAMC,SAC5BF,EAEPtP,EAAAA,cAACyP,EAAAA,IAAiB,CAChBP,QAASA,GACTQ,YAAaR,GAAQ9I,OACrBuJ,YAAY,EACZC,aAAa,IA/CjB5P,EAAAA,cAAC6P,EAAAA,IAAS,CAACC,KAAMT,EAAWH,QAASA,KAClC,SAAA/O,GAAA,IAAG2P,EAAI3P,EAAJ2P,KAAMZ,EAAO/O,EAAP+O,QAASa,EAAa5P,EAAb4P,cAAeC,EAAc7P,EAAd6P,eAAgBC,EAAW9P,EAAX8P,YAAW,OAC3DjQ,EAAAA,cAACkQ,EAAAA,IAAUH,IACT/P,EAAAA,cAACmQ,EAAAA,IAAS,KACRnQ,EAAAA,cAACuN,EAAAA,IAAQ,KACN2B,EAAQpI,KAAI,SAAAqI,GAAM,OACjBnP,EAAAA,cAACoQ,EAAAA,IAAWC,GAAA,CAACrJ,IAAKmI,EAAOnI,KAASgJ,EAAe,CAAEb,OAAAA,KAChDA,EAAOA,OACI,MAIpBnP,EAAAA,cAACsQ,EAAAA,IAAS,KAEPR,EAAKhJ,KAAI,SAACyJ,EAAKjK,GACd,IAAMjB,EAAWgK,EAAU/I,GAC3B,OACEtG,EAAAA,cAACyM,GAAW,CACVzF,IAAK3B,EAASV,GACdiI,SAAUqD,EAAY,CAAEM,IAAAA,IACxBlL,SAAUA,EACVwH,UAAW,kBAAMA,EAAUxH,EAAS,GAG1C,KAEEyK,EAAK1J,QACLpG,EAAAA,cAACuN,EAAAA,IAAQ,KACPvN,EAAAA,cAACwN,EAAAA,IAAS,CAAClM,UAAU,kBAAkBkP,QAAStB,EAAQ9I,QAAQ,gBAMhE,GAmBhB,E,y4CCpHA,IAAQqK,GAAqB/N,EAEhBgO,GAAuB,WAClC,ICVuBC,EAAIC,EACvBC,EDSJC,EAA2DL,KAAkBM,EAAAD,EAArEE,KAAM3B,OAAS,IAAA0B,EAAG,GAAEA,EAAEzB,EAASwB,EAATxB,UAAWC,EAAKuB,EAALvB,MAAO0B,EAAMH,EAANG,OAG2BjN,EAAAC,IAA/BC,EAAAA,EAAAA,UAASuF,IAAsB,GAApEyH,EAAclN,EAAA,GAAEmN,EAAiBnN,EAAA,GAElCoN,GAAoB9M,EAAAA,EAAAA,UACxB,kBEhB2B,SAAC+K,EAAWrH,GACzC,IAAQpB,EAAwBoB,EAAxBpB,KAAM+B,EAAkBX,EAAlBW,OAAQe,EAAU1B,EAAV0B,MAEhB2H,EAAU,GAchB,GAZIzK,GACFyK,EAAQ7J,MAAK,SAAAnC,GAAQ,OACnBA,EAASuB,KAAK0K,cAAcC,SAAS3K,EAAK0K,cAAc,IAIxD3I,EAAO/B,MACTyK,EAAQ7J,MAAK,SAAAnC,GAAQ,OACnBA,EAASsD,OAAO2I,cAAcC,SAAS5I,EAAO/B,KAAK0K,cAAc,IAIjE3I,EAAON,QAAQjC,OAAQ,CACzB,IAAMoL,EAAM,IAAI1L,IAAI6C,EAAON,SAC3BgJ,EAAQ7J,MAAK,SAAAnC,GAAQ,OAAImM,EAAIjN,IAAIc,EAASsD,OAAO,GACnD,CAQA,GANIe,EAAM9C,MACRyK,EAAQ7J,MAAK,SAAAnC,GAAQ,OACnBA,EAAS0D,KAAKuI,cAAcC,SAAS7H,EAAM9C,KAAK0K,cAAc,IAI9D5H,EAAMrB,QAAQjC,OAAQ,CACxB,IAAMoL,EAAM,IAAI1L,IAAI4D,EAAMrB,SAC1BgJ,EAAQ7J,MAAK,SAAAnC,GAAQ,OAAImM,EAAIjN,IAAIc,EAAS0D,KAAK,GACjD,CAEA,OAAIsI,EAAQjL,OACHiJ,EAAUoC,QAAO,SAAApM,GAAQ,OAC9BgM,EAAQhL,OAAM,SAAAoL,GAAM,OAAIA,EAAOpM,EAAS,GAAC,IAGpCgK,CAEX,CFxBUqC,CAAgBrC,EAAW6B,EAAe,GAChD,CAAC7B,EAAW6B,IAGRtH,GAAgBtF,EAAAA,EAAAA,UAAQ,WAC5B,IAAMkN,EAAM,IAAI1L,IAMhB,OALAuJ,EAAUsC,SAAQ,SAAAtM,GACXmM,EAAIjN,IAAIc,EAASsD,SACpB6I,EAAII,IAAIvM,EAASsD,OAErB,IACOkJ,MAAM9G,KAAKyG,EACpB,GAAG,CAACnC,IAEExF,GAAevF,EAAAA,EAAAA,UAAQ,WAC3B,IAAMkN,EAAM,IAAI1L,IAMhB,OALAuJ,EAAUsC,SAAQ,SAAAtM,GACXmM,EAAIjN,IAAIc,EAAS0D,OACpByI,EAAII,IAAIvM,EAAS0D,KAErB,IACO8I,MAAM9G,KAAKyG,EACpB,GAAG,CAACnC,IAEEzE,GCxCiB+F,EDwCiBQ,ECxCbP,EDwCgC,ICvCvDC,OAAYjO,EACT,WAAa,QAAAkP,EAAA9G,UAAA5E,OAAT2L,EAAI,IAAAF,MAAAC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAhH,UAAAgH,GACTnB,GACFoB,aAAapB,GAGfA,EAAYqB,YAAW,WACrBvB,EAAEwB,WAAC,EAAGJ,GACNE,aAAapB,EACf,GAAGD,EACL,GD+BAwB,Ef7CkC,WAClC,IAGEpO,EAAAC,GAHwBC,EAAAA,EAAAA,UAAS,CACjCkB,MAAM,EACNiN,oBAAgBzP,IAChB,GAHK0P,EAAKtO,EAAA,GAAEuO,EAAQvO,EAAA,GAmBtB,MAAO,CACLwO,UAAWF,EAAMlN,KACjBiN,eAAgBC,EAAMD,eACtBI,UAjBgB,SAAApN,GAChBkN,EAAS,CACPnN,MAAM,EACNiN,eAAgBhN,GAEpB,EAaEqN,WAXiB,WACjBH,GAAS,SAAArL,GAAI,OAAAiD,EAAAA,EAAA,GACRjD,GAAI,IACP9B,MAAM,GAAK,GAEf,EAQF,CeoBIuN,GADMH,EAASJ,EAATI,UAAWH,EAAcD,EAAdC,eAAgBI,EAASL,EAATK,UAAWC,EAAUN,EAAVM,WAiB9C,OACE1S,EAAAA,cAAA,OAAKsB,UAAU,0BACbtB,EAAAA,cAAC2K,GAAgB,CACff,cAAeA,EACfC,aAAcA,EACde,uBAAwBA,IAE1B5K,EAAAA,cAACoP,GAAc,CACbC,UAAW+B,EACX9B,UAAWA,EACXC,MAAOA,EACP1C,UAAW4F,IAEbzS,EAAAA,cAACmF,EAAiB,CAChBC,KAAMoN,EACNnN,SAAUgN,EACV9M,OA3Ba,SAAA4B,GACjB,IAAMyL,EAAY5M,GAAOqJ,GACnBhK,EAAWuN,EAAaC,MAC5B,SAAAxN,GAAQ,OAAIA,EAASV,KAAO0N,EAAe1N,EAAE,IAE3CU,IACFA,EAASK,KAAOyB,EAChB8J,EAAO2B,GAEX,EAmBMnN,QAASiN,IAIjB,EGhFaI,GAAgB,WAC3B,OACE9S,EAAAA,cAAA,OAAKsB,UAAU,kBACbtB,EAAAA,cAACqC,EAAU,CACTE,KAAM,SAAAwQ,GAAY,OAAI/S,EAAAA,cAACyN,EAAAA,GAAe,CAACrL,KAAM2Q,EAAa3Q,MAAQ,EAClEI,MAAM,YACNC,SAAS,sCAEXzC,EAAAA,cAAC0Q,GAAoB,MAG3B,ECdasC,GAAe,WAC1B,OACEhT,EAAAA,cAAA,OAAKsB,UAAU,kBACbtB,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,KAAGsB,UAAU,QAAO,gDAG1B,ECJa2R,GAAa,WACxB,OACEjT,EAAAA,cAAA,OAAKsB,UAAU,eACbtB,EAAAA,cAACkT,EAAAA,GAAM,KACLlT,EAAAA,cAACmT,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAK,KAChBrT,EAAAA,cAACsT,EAAAA,GAAQ,CAAC9R,GAAG,gBAEfxB,EAAAA,cAACmT,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAK,aAAaE,UAAWT,KAC1C9S,EAAAA,cAACmT,EAAAA,GAAK,CAACE,KAAK,IAAIE,UAAWP,MAInC,ECXaQ,GAAM,WACjB,OACExT,EAAAA,cAACyT,EAAAA,IAAK,CAACnS,UAAU,MAAMoS,MAAM,SAC3B1T,EAAAA,cAACD,EAAQ,MACTC,EAAAA,cAACiT,GAAU,MAGjB,GCLAU,EAAAA,EAAAA,GAAW1Q,SAAS2Q,eAAe,SAAS1T,OAC1CF,EAAAA,cAAC6T,EAAAA,WAAU,KACT7T,EAAAA,cAAC8T,EAAAA,GAAU,KACT9T,EAAAA,cAACwT,GAAG,Q","sources":["webpack:///./components/UIHeader/UIHeader.js","webpack:///./images/cube.png","webpack:///./components/PageHeader/PageHeader.js","webpack:///./apis/instance-api.js","webpack:///./components/InstanceTagsModal/use-instance-tags-modal.js","webpack:///./components/ModalPortal/ModalPortal.js","webpack:///./utilities/instance-util.js","webpack:///./components/InstanceTagsModal/TagInput.js","webpack:///./components/InstanceTagsModal/InstanceTagsModal.js","webpack:///./pages/Instances/StatusFilter.js","webpack:///./components/UserAvatar/UserAvatar.js","webpack:///./pages/Instances/OwnerFilter.js","webpack:///./pages/Instances/InstancesSearch.js","webpack:///./pages/Instances/use-status-filter-handlers.js","webpack:///./pages/Instances/use-owner-filter-handlers.js","webpack:///./pages/Instances/InstancesToolbar.js","webpack:///./utilities/date-util.js","webpack:///./pages/Instances/InstanceRow.js","webpack:///./pages/Instances/InstancesTable.js","webpack:///./pages/Instances/InstancesPageContent.js","webpack:///./utilities/debounce-util.js","webpack:///./pages/Instances/filter-instances.js","webpack:///./pages/Instances/InstancesPage.js","webpack:///./pages/NotFound/NotFoundPage.js","webpack:///./components/RouterView/RouterView.js","webpack:///./App.js","webpack:///./index.js"],"sourcesContent":["import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderMenuButton,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  SideNavLink,\n  SideNavDivider\n} from '@carbon/react';\nimport { Home } from '@carbon/icons-react';\nimport { Link } from 'react-router-dom';\nimport cube from '@images/cube.png';\n\nexport const UIHeader = () => {\n  return (\n    <HeaderContainer\n      render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n        <Header aria-label=\"Cube Interview Assignment\">\n          <SkipToContent />\n          <HeaderMenuButton\n            aria-label=\"Open menu\"\n            isCollapsible\n            onClick={onClickSideNavExpand}\n            isActive={isSideNavExpanded}\n          />\n          <SideNav\n            aria-label=\"Side navigation\"\n            isRail\n            expanded={isSideNavExpanded}\n            onOverlayClick={onClickSideNavExpand}\n          >\n            <SideNavItems>\n              <SideNavLink renderIcon={Home} large>\n                Home\n              </SideNavLink>\n              <SideNavDivider />\n            </SideNavItems>\n          </SideNav>\n          <div className=\"cube--header-logo__wrapper\">\n            <Link to=\"/\">\n              <img\n                src={cube}\n                alt=\"logo\"\n                width=\"30px\"\n                style={{ marginLeft: '1rem' }}\n              />\n            </Link>\n            <span className=\"cube-header-logo__divider\" />\n            <HeaderName\n              as={Link}\n              to=\"/\"\n              prefix=\"\"\n              style={{ paddingLeft: '0.5rem' }}\n            >\n              {process.env.APP_NAME || 'Cube Interview Assignment'}\n            </HeaderName>\n          </div>\n        </Header>\n      )}\n    />\n  );\n};\n","export default \"/bigstack-interview-assignment/build/cube.png\";","import React from 'react';\n\n/**\n * @typedef {object} DefaultIconProps\n * @property {number} size\n */\n\n/**\n * @type {DefaultIconProps}\n */\nconst DEFAULT_ICON_PROPS = {\n  size: 32\n};\n\n/**\n * @param {object} props\n * @param {(defaultProps: DefaultIconProps) => JSX.Element} props.icon\n * @param {string} props.title\n * @param {string} props.subtitle\n */\nexport const PageHeader = props => {\n  const { icon, title, subtitle } = props;\n\n  return (\n    <div className=\"page-header\">\n      <div className=\"icon-wrap\">{icon(DEFAULT_ICON_PROPS)}</div>\n      <div className=\"info-wrap\">\n        <h2 className=\"header-title\">{title}</h2>\n        <small className=\"header-subtitle\">{subtitle}</small>\n      </div>\n    </div>\n  );\n};\n","import useSWR from 'swr';\nimport { getStoredTags } from '@utilities/instance-util';\nimport { axios } from './axios-instance';\n\nconst useListInstances = () => {\n  let fetcher = undefined;\n\n  if (process.env.NODE_ENV === 'production') {\n    // Use fixed instances data in production environment. (for Github Pages)\n    fetcher = () => require('@server-data/instances.json');\n  } else {\n    // Get instances from server in non-production environment.\n    fetcher = async () => {\n      const { data } = await axios.get('/instances');\n\n      if (Array.isArray(data)) {\n        data.forEach(instance => {\n          const storedTags = getStoredTags(instance.id);\n          if (storedTags) {\n            instance.tags = storedTags;\n          }\n        });\n      }\n      return data;\n    };\n  }\n\n  return useSWR('listInstances', fetcher);\n};\n\nexport const InstanceApi = {\n  useListInstances\n};\n","import { useState } from 'react';\n\nexport const useInstanceTagsModal = () => {\n  const [state, setState] = useState({\n    open: false,\n    editedInstance: undefined\n  });\n\n  const openModal = instance => {\n    setState({\n      open: true,\n      editedInstance: instance\n    });\n  };\n\n  const closeModal = () => {\n    setState(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n\n  return {\n    modalOpen: state.open,\n    editedInstance: state.editedInstance,\n    openModal,\n    closeModal\n  };\n};\n","import { createPortal } from 'react-dom';\n\n/**\n * According to the official documentation of `@carbon/react`, `<Modal>` and `<ComposedModal>` has to be\n * put at the top level in a React tree.\n * @see https://react.carbondesignsystem.com/?path=/docs/components-modal--overview#openingclosing-modal\n * @param {object} props\n * @param {any} props.children\n */\nexport const ModalPortal = props => {\n  const { children } = props;\n\n  return typeof document === 'undefined'\n    ? null\n    : createPortal(children, document.body);\n};\n","/**\n * @param {object} instance\n * @returns {string}\n */\nexport const computeInstanceType = instance => {\n  if (!instance) {\n    return 'INSTANCE_NOT_FOUND';\n  }\n\n  const {\n    provider: { region },\n    instanceType: { vcpu, memory, disk }\n  } = instance;\n\n  return `${vcpu} vCPU / ${memory} GB / ${disk} GB / ${region}`;\n};\n\n/**\n * @param {string} instanceId\n */\nconst computeTagsStorageKey = instanceId => `${instanceId}-tags`;\n\n/**\n * Retrieve the tags of the given instance from localStorage.\n * @param {string} instanceId\n * @returns {string[] | undefined}\n */\nexport const getStoredTags = instanceId => {\n  if ('localStorage' in window) {\n    const key = computeTagsStorageKey(instanceId);\n    const serializedTags = localStorage.getItem(key);\n    if (serializedTags) {\n      return JSON.parse(serializedTags);\n    }\n  }\n  return undefined;\n};\n\n/**\n * Save the tags of the given instance to localStorage.\n * @param {string} instanceId\n * @param {string[]} tags\n */\nexport const storeTags = (instanceId, tags) => {\n  if ('localStorage' in window) {\n    const key = computeTagsStorageKey(instanceId);\n    localStorage.setItem(key, JSON.stringify(tags));\n  }\n};\n\n// Tags can only contain letters, numbers, dashes and underscores.\nconst TAG_PATTERN = /^[a-zA-Z0-9_-]*$/;\n\n/**\n * @param {string} tag\n * @returns {boolean}\n */\nexport const isValidTag = tag => {\n  return TAG_PATTERN.test(tag);\n};\n","import React, { useState, useMemo } from 'react';\nimport { TextInput } from '@carbon/react';\nimport { isValidTag } from '@utilities/instance-util';\n\n/**\n * @param {object} props\n * @param {Set<string>} props.tagSet\n * @param {(e: React.FocusEvent<HTMLInputElement>) => void} props.onBlur\n * @param {(value: string) => void} props.onSubmit\n */\nexport const TagInput = props => {\n  const { tagSet, onBlur, onSubmit: onSubmitProp } = props;\n\n  const [value, setValue] = useState('');\n\n  const errorMessage = useMemo(() => {\n    if (tagSet.has(value)) {\n      return 'Tag must be unique.';\n    } else if (!isValidTag(value)) {\n      return 'Tag must match the requested format.';\n    } else {\n      return undefined;\n    }\n  }, [value, tagSet]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (value && !errorMessage) {\n      onSubmitProp(value);\n      setValue('');\n    }\n  };\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <TextInput\n        data-modal-primary-focus\n        id=\"tag-input\"\n        className=\"tag-input-wrap\"\n        hideLabel={true}\n        placeholder=\"Add tag here\"\n        labelText=\"Add tag here\"\n        invalid={!!errorMessage}\n        invalidText={errorMessage}\n        size=\"sm\"\n        value={value}\n        onBlur={onBlur}\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { Button, DismissibleTag, Modal } from '@carbon/react';\nimport { ModalPortal } from '@components/ModalPortal';\nimport { isValidTag, storeTags } from '@utilities/instance-util';\nimport { TagInput } from './TagInput';\n\n/**\n * @param {object} props\n * @param {boolean} props.open\n * @param {object} props.instance\n * @param {(tags: string[]) => void} props.onSave\n * @param {() => void} props.onClose\n */\nexport const InstanceTagsModal = props => {\n  const { open, instance, onSave: onSaveProp, onClose: onCloseProp } = props;\n\n  const [tags, setTags] = useState([]);\n  const inputValueAfterBlur = useRef('');\n\n  const tagSet = useMemo(() => new Set(tags), [tags]);\n\n  useEffect(() => {\n    if (open && instance?.tags) {\n      setTags([...instance.tags]);\n    } else {\n      // Reset `inputValueAfterBlur` when modal is closed.\n      inputValueAfterBlur.current = '';\n    }\n  }, [open, instance?.tags]);\n\n  const addTag = newTag => {\n    setTags(prev => [...prev, newTag]);\n  };\n\n  const removeTag = index => {\n    setTags(prev => {\n      const newTags = [...prev];\n      newTags.splice(index, 1);\n      return newTags;\n    });\n  };\n\n  /**\n   * @param {React.FocusEvent<HTMLInputElement>} e\n   */\n  const onTagInputBlur = e => {\n    inputValueAfterBlur.current = e.target.value;\n  };\n\n  const onSave = () => {\n    const newTags = [...tags];\n\n    // Add unsaved value to the tag list, if possible.\n    if (\n      inputValueAfterBlur.current &&\n      !tagSet.has(inputValueAfterBlur.current) &&\n      isValidTag(inputValueAfterBlur.current)\n    ) {\n      newTags.push(inputValueAfterBlur.current);\n    }\n\n    storeTags(instance.id, newTags);\n    onSaveProp(newTags);\n    onClose(false);\n  };\n\n  /**\n   * @param {boolean} checkChanges Whether to check if tags have changed before close.\n   */\n  const onClose = checkChanges => {\n    let changed = false;\n\n    if (checkChanges) {\n      changed =\n        instance.tags.length !== tags.length ||\n        !tags.every((tag, index) => tag === instance.tags[index]);\n    }\n\n    if (\n      changed &&\n      !confirm('Are you sure you want to exit without saving your changes?')\n    ) {\n      return;\n    }\n\n    onCloseProp();\n  };\n\n  return (\n    <ModalPortal>\n      <Modal\n        className=\"instance-tags-modal\"\n        open={open}\n        passiveModal={true}\n        preventCloseOnClickOutside={true}\n        modalHeading={`Edit tags of ${instance?.name}`}\n        onRequestClose={() => onClose(true)}\n      >\n        <div className=\"hint\">\n          Tags can only contain letters, numbers, dashes and underscores.\n        </div>\n        <div className=\"content-wrap\">\n          {tags.map((tag, index) => (\n            <DismissibleTag\n              key={tag}\n              type=\"cool-gray\"\n              onClose={() => removeTag(index)}\n            >\n              {tag}\n            </DismissibleTag>\n          ))}\n          <TagInput\n            // Use key to \"reset\" the value of input when modal is toggled.\n            key={open}\n            tagSet={tagSet}\n            onBlur={onTagInputBlur}\n            onSubmit={addTag}\n          />\n        </div>\n        <div className=\"footer-wrap\">\n          <Button className=\"save-button\" onClick={onSave}>\n            Save\n          </Button>\n        </div>\n      </Modal>\n    </ModalPortal>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Checkbox, MenuButton, Search } from '@carbon/react';\n\n/**\n * @param {object} props\n * @param {object} props.criteria\n * @param {string[]} props.statuses\n * @param {React.ChangeEventHandler<HTMLInputElement>} props.onNameChange\n * @param {(e: React.ChangeEvent<HTMLInputElement>, status: string) => void} props.onOptionCheck\n */\nexport const StatusFilter = props => {\n  const { criteria, statuses, onNameChange, onOptionCheck } = props;\n\n  const selectedStatuses = useMemo(\n    () => new Set(criteria.options),\n    [criteria.options]\n  );\n\n  return (\n    <MenuButton\n      className=\"status-filter-wrap\"\n      kind=\"ghost\"\n      label=\"Status\"\n      size=\"md\"\n      menuAlignment=\"bottom-start\"\n    >\n      <div className=\"status-filter-content\">\n        <Search\n          className=\"search-input-wrap\"\n          placeholder=\"Search\"\n          labelText=\"Search\"\n          size=\"sm\"\n          value={criteria.name}\n          onChange={onNameChange}\n        />\n        <div className=\"options-wrap\">\n          {statuses.map(status => (\n            <Checkbox\n              key={status}\n              id={status}\n              labelText={status}\n              checked={selectedStatuses.has(status)}\n              onChange={e => onOptionCheck(e, status)}\n            />\n          ))}\n        </div>\n      </div>\n    </MenuButton>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst COLOR_COUNT = 5;\n\n/**\n * @param {object} props\n * @param {string} props.user\n * @param {'sm' | 'md'} [props.size] Default: `sm`\n */\nexport const UserAvatar = props => {\n  const { user, size = 'md' } = props;\n\n  const firstChar = user[0] || '';\n  const colorIndex = firstChar.charCodeAt(0) % COLOR_COUNT;\n\n  return (\n    <span className={classNames('user-avatar', size, `color-${colorIndex}`)}>\n      {firstChar}\n    </span>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Checkbox, MenuButton, Search } from '@carbon/react';\nimport { UserAvatar } from '@components/UserAvatar';\n\n/**\n * @param {object} props\n * @param {object} props.criteria\n * @param {string[]} props.users\n * @param {React.ChangeEventHandler<HTMLInputElement>} props.onNameChange\n * @param {(e: React.ChangeEvent<HTMLInputElement>, user: string) => void} props.onOptionCheck\n */\nexport const OwnerFilter = props => {\n  const { criteria, users, onNameChange, onOptionCheck } = props;\n\n  const selectedUsers = useMemo(\n    () => new Set(criteria.options),\n    [criteria.options]\n  );\n\n  return (\n    <MenuButton\n      className=\"owner-filter-wrap\"\n      kind=\"ghost\"\n      label=\"Owner\"\n      size=\"md\"\n      menuAlignment=\"bottom-start\"\n    >\n      <div className=\"owner-filter-content\">\n        <Search\n          className=\"search-input-wrap\"\n          placeholder=\"Search\"\n          labelText=\"Search\"\n          size=\"sm\"\n          value={criteria.name}\n          onChange={onNameChange}\n        />\n        <div className=\"options-wrap\">\n          {users.map(user => (\n            <div key={user} className=\"user-checkbox-wrap\">\n              <Checkbox\n                id={user}\n                labelText={''}\n                checked={selectedUsers.has(user)}\n                onChange={e => onOptionCheck(e, user)}\n              />\n              <label className=\"checkbox-label-wrap\" htmlFor={user}>\n                <UserAvatar user={user} size=\"sm\" />\n                <span className=\"user-name\">{user}</span>\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </MenuButton>\n  );\n};\n","import React, { useState } from 'react';\nimport { Search } from '@carbon/react';\nimport { StatusFilter } from './StatusFilter';\nimport { OwnerFilter } from './OwnerFilter';\nimport { useStatusFilterHandlers } from './use-status-filter-handlers';\nimport { useOwnerFilterHandlers } from './use-owner-filter-handlers';\n\nexport const createDefaultCriteria = () => ({\n  name: '',\n  status: {\n    name: '',\n    options: []\n  },\n  owner: {\n    name: '',\n    options: []\n  }\n});\n\n/**\n * @param {object} props\n * @param {string[]} props.statusOptions\n * @param {string[]} props.ownerOptions\n * @param {(criteria: object) => void} props.onChange\n */\nexport const InstancesSearch = props => {\n  const { statusOptions, ownerOptions, onChange } = props;\n\n  const [criteria, setCriteria] = useState(createDefaultCriteria);\n\n  const updateCriteria = newCriteria => {\n    setCriteria(newCriteria);\n    onChange(newCriteria);\n  };\n\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} e\n   */\n  const onNameChange = e => {\n    const newCriteria = {\n      ...criteria,\n      name: e.target.value\n    };\n    updateCriteria(newCriteria);\n  };\n\n  const { onStatusNameChange, onStatusOptionCheck } = useStatusFilterHandlers({\n    criteria,\n    onChange: updateCriteria\n  });\n\n  const { onOwnerNameChange, onOwnerOptionCheck } = useOwnerFilterHandlers({\n    criteria,\n    onChange: updateCriteria\n  });\n\n  return (\n    <div className=\"instances-search\">\n      <Search\n        className=\"search-input-wrap\"\n        placeholder=\"Search by instance name\"\n        labelText=\"Search by instance name\"\n        value={criteria.name}\n        onChange={onNameChange}\n      />\n      <StatusFilter\n        criteria={criteria.status}\n        statuses={statusOptions}\n        onNameChange={onStatusNameChange}\n        onOptionCheck={onStatusOptionCheck}\n      />\n      <OwnerFilter\n        criteria={criteria.owner}\n        users={ownerOptions}\n        onNameChange={onOwnerNameChange}\n        onOptionCheck={onOwnerOptionCheck}\n      />\n    </div>\n  );\n};\n","/**\n * @param {object} options\n * @param {object} options.criteria\n * @param {(statusCriteria: object) => void} options.onChange\n */\nexport const useStatusFilterHandlers = options => {\n  const { criteria, onChange } = options;\n\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} e\n   */\n  const onStatusNameChange = e => {\n    const newCriteria = {\n      ...criteria\n    };\n    newCriteria.status.name = e.target.value;\n    onChange(newCriteria);\n  };\n\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} e\n   * @param {string} status\n   */\n  const onStatusOptionCheck = (e, status) => {\n    const { checked } = e.target;\n    const newCriteria = {\n      ...criteria\n    };\n    const options = [...newCriteria.status.options];\n    if (checked) {\n      options.push(status);\n    } else {\n      const index = options.indexOf(status);\n      if (index >= 0) {\n        options.splice(index, 1);\n      }\n    }\n    newCriteria.status.options = options;\n    onChange(newCriteria);\n  };\n\n  return {\n    onStatusNameChange,\n    onStatusOptionCheck\n  };\n};\n","/**\n * @param {object} options\n * @param {object} options.criteria\n * @param {(ownerCriteria: object) => void} options.onChange\n */\nexport const useOwnerFilterHandlers = options => {\n  const { criteria, onChange } = options;\n\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} e\n   */\n  const onOwnerNameChange = e => {\n    const newCriteria = {\n      ...criteria\n    };\n    newCriteria.owner.name = e.target.value;\n    onChange(newCriteria);\n  };\n\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} e\n   * @param {string} owner\n   */\n  const onOwnerOptionCheck = (e, owner) => {\n    const { checked } = e.target;\n    const newCriteria = {\n      ...criteria\n    };\n    const options = [...newCriteria.owner.options];\n    if (checked) {\n      options.push(owner);\n    } else {\n      const index = options.indexOf(owner);\n      if (index >= 0) {\n        options.splice(index, 1);\n      }\n    }\n    newCriteria.owner.options = options;\n    onChange(newCriteria);\n  };\n\n  return {\n    onOwnerNameChange,\n    onOwnerOptionCheck\n  };\n};\n","import React from 'react';\nimport { Add } from '@carbon/icons-react';\nimport { Button } from '@carbon/react';\nimport { InstancesSearch } from './InstancesSearch';\n\n/**\n * @param {object} props\n * @param {string[]} props.statusOptions\n * @param {string[]} props.ownerOptions\n * @param {(criteria: object) => void} props.onSearchCriteriaChange\n */\nexport const InstancesToolbar = props => {\n  const { statusOptions, ownerOptions, onSearchCriteriaChange } = props;\n\n  return (\n    <div className=\"instances-toolbar\">\n      <InstancesSearch\n        statusOptions={statusOptions}\n        ownerOptions={ownerOptions}\n        onChange={onSearchCriteriaChange}\n      />\n      <Button className=\"add-instance-button\" kind=\"ghost\" renderIcon={Add}>\n        Add Instance\n      </Button>\n    </div>\n  );\n};\n","/**\n * @param {string | Date} to\n * @param {string | Date} [from]\n * @return {string}\n */\nexport const computeTimeAgo = (to, from = new Date()) => {\n  const toDate = new Date(to);\n  const fromDate = new Date(from);\n  const seconds = (fromDate.getTime() - toDate.getTime()) / 1000;\n  const minutes = Math.floor(seconds / 60);\n\n  if (Number.isNaN(minutes)) {\n    return 'NaN';\n  } else if (seconds < 0) {\n    console.warn('from should not be less than to');\n    return 'ERROR';\n  } else {\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(months / 12);\n\n    let [unit, amount] = ['', 0];\n\n    if (years > 0) {\n      unit = 'year';\n      amount = years;\n    } else if (months > 0) {\n      unit = 'month';\n      amount = months;\n    } else if (weeks > 0) {\n      unit = 'week';\n      amount = weeks;\n    } else if (days > 0) {\n      unit = 'day';\n      amount = days;\n    } else if (hours > 0) {\n      unit = 'hour';\n      amount = hours;\n    } else if (minutes > 3) {\n      unit = 'minute';\n      amount = minutes;\n    } else {\n      return 'Just now';\n    }\n\n    // Pluralization\n    if (amount > 1) {\n      unit += 's';\n    }\n\n    return `${amount} ${unit} ago`;\n  }\n};\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport {\n  OverflowMenu,\n  OverflowMenuItem,\n  TableCell,\n  TableRow,\n  Tag,\n  Tooltip\n} from '@carbon/react';\nimport {\n  BareMetalServer,\n  Edit,\n  OverflowMenuHorizontal\n} from '@carbon/icons-react';\nimport { UserAvatar } from '@components/UserAvatar';\nimport { computeInstanceType } from '@utilities/instance-util';\nimport { computeTimeAgo } from '@utilities/date-util';\n\nconst statusTagType = {\n  active: 'green',\n  canceled: 'blue',\n  expired: 'cool-gray',\n  rejected: 'red',\n  stopped: 'cool-gray'\n};\n\nconst MAX_VISIBLE_TAG_COUNT = 5;\n\n/**\n * @param {object} props\n * @param {object} props.instance\n * @param {object} props.rowProps\n * @param {() => void} props.onEditTag\n */\nexport const InstanceRow = props => {\n  const { instance, rowProps, onEditTag } = props;\n\n  const keyName = useMemo(\n    () => instance.key_name.replace('bigstack-', ''),\n    [instance.key_name]\n  );\n\n  const renderNameCell = () => {\n    return (\n      <span className=\"name-wrap\">\n        <b className=\"instance-name\">{instance.name}</b>\n        <span className=\"instance-type\">{computeInstanceType(instance)}</span>\n        <span className=\"instance-image\">{instance.image}</span>\n      </span>\n    );\n  };\n\n  const renderTags = () => {\n    const { tags } = instance;\n    if (tags.length) {\n      const moreTagsCount = tags.length - MAX_VISIBLE_TAG_COUNT;\n      return (\n        <span className=\"tags-wrap\">\n          {tags.slice(0, MAX_VISIBLE_TAG_COUNT).map(tag => (\n            <Tooltip key={tag} className=\"tag-tooltip\" label={tag}>\n              <Tag\n                className=\"instance-tag\"\n                type=\"cool-gray\"\n                size=\"sm\"\n                onClick={onEditTag}\n              >\n                {tag}\n              </Tag>\n            </Tooltip>\n          ))}\n          {moreTagsCount > 0 && renderMoreTags(moreTagsCount)}\n        </span>\n      );\n    } else {\n      return (\n        <button className=\"add-tag-button\" onClick={onEditTag}>\n          Add...\n        </button>\n      );\n    }\n  };\n\n  const renderMoreTags = count => {\n    const tooltip = `${count} more tag(s)`;\n    const text = count > 99 ? '99+' : `${count}+`;\n    return (\n      <Tooltip className=\"more-tag-tooltip\" label={tooltip}>\n        <Tag\n          className=\"instance-tag instance-tag__more\"\n          type=\"cool-gray\"\n          size=\"sm\"\n          onClick={onEditTag}\n        >\n          {text}\n        </Tag>\n      </Tooltip>\n    );\n  };\n\n  const renderExpires = () => {\n    const { status, launched_at, expiresAt } = instance;\n\n    if (!launched_at) {\n      return null;\n    }\n\n    return (\n      <span className=\"expires-wrap\">\n        <span\n          className={classNames('expires-text', {\n            expired: status === 'expired'\n          })}\n        >\n          {expiresAt ? computeTimeAgo(expiresAt) : 'Never'}\n        </span>\n        {launched_at && <Edit className=\"edit-icon\" />}\n      </span>\n    );\n  };\n\n  return (\n    <TableRow {...rowProps}>\n      <TableCell className=\"icon-cell\">\n        <BareMetalServer />\n      </TableCell>\n      <TableCell className=\"name-cell\">{renderNameCell()}</TableCell>\n      <TableCell className=\"keypair-cell\">\n        {keyName && (\n          <Tooltip className=\"keypair-tooltip\" label={keyName}>\n            <Tag className=\"keypair-tag\" type=\"cool-gray\" size=\"sm\">\n              {keyName}\n            </Tag>\n          </Tooltip>\n        )}\n      </TableCell>\n      <TableCell className=\"volumes-cell\">\n        <span className=\"volumes-text\">{instance.volumes.length}</span>\n      </TableCell>\n      <TableCell className=\"interface-ip-cell\">\n        {instance.interface_ip}\n      </TableCell>\n      <TableCell className=\"floating-ip-cell\">{instance.floating_ip}</TableCell>\n      <TableCell className=\"tags-cell\">{renderTags()}</TableCell>\n      <TableCell className=\"owner-cell\">\n        <UserAvatar user={instance.user} />\n      </TableCell>\n      <TableCell className=\"expires-cell\">{renderExpires()}</TableCell>\n      <TableCell className=\"created-cell\">\n        {!!instance.launched_at && computeTimeAgo(instance.launched_at)}\n      </TableCell>\n      <TableCell className=\"status-cell\">\n        <Tag\n          className=\"status-tag\"\n          type={statusTagType[instance.status]}\n          size=\"sm\"\n        >\n          {instance.status}\n        </Tag>\n      </TableCell>\n      <TableCell className=\"action-cell\">\n        <OverflowMenu\n          className=\"overflow-menu-toggle\"\n          aria-label=\"overflow-menu\"\n          flipped={true}\n          renderIcon={OverflowMenuHorizontal}\n        >\n          <OverflowMenuItem itemText=\"Enable floating IP\" />\n          <OverflowMenuItem itemText=\"Reboot\" />\n          <OverflowMenuItem itemText=\"Power off\" />\n          <OverflowMenuItem itemText=\"Power cycle\" />\n          <OverflowMenuItem itemText=\"View usage\" />\n          <OverflowMenuItem itemText=\"Modify Lifecycle\" hasDivider={true} />\n          <OverflowMenuItem\n            itemText=\"Commit to app image\"\n            requireTitle={true}\n          />\n          <OverflowMenuItem\n            itemText=\"Destroy\"\n            hasDivider={true}\n            isDelete={true}\n          />\n        </OverflowMenu>\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React from 'react';\nimport {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  DataTableSkeleton,\n  TableCell\n} from '@carbon/react';\nimport { InstanceRow } from './InstanceRow';\n\nconst headers = [\n  {\n    key: 'leading_icon',\n    header: ''\n  },\n  {\n    key: 'name',\n    header: 'name'\n  },\n  {\n    key: 'key_name',\n    header: 'keypair'\n  },\n  {\n    key: 'volumes',\n    header: 'volumes'\n  },\n  {\n    key: 'interface_ip',\n    header: 'interface Ip'\n  },\n  {\n    key: 'floating_ip',\n    header: 'floating ip'\n  },\n  {\n    key: 'tags',\n    header: 'tags'\n  },\n  {\n    key: 'user',\n    header: 'owner'\n  },\n  {\n    key: 'expiresAt',\n    header: 'expires'\n  },\n  {\n    key: 'launched_at',\n    header: 'created'\n  },\n  {\n    key: 'status',\n    header: 'status'\n  },\n  {\n    key: 'action_button',\n    header: ''\n  }\n];\n\n/**\n * @param {object} props\n * @param {object[]} props.instances\n * @param {boolean} props.isLoading\n * @param {any} props.error\n * @param {(instance: object) => void} props.onEditTag\n */\nexport const InstancesTable = props => {\n  const { instances, isLoading, error, onEditTag } = props;\n\n  const renderDataTable = () => (\n    <DataTable rows={instances} headers={headers}>\n      {({ rows, headers, getTableProps, getHeaderProps, getRowProps }) => (\n        <Table {...getTableProps()}>\n          <TableHead>\n            <TableRow>\n              {headers.map(header => (\n                <TableHeader key={header.key} {...getHeaderProps({ header })}>\n                  {header.header}\n                </TableHeader>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* Data */}\n            {rows.map((row, index) => {\n              const instance = instances[index];\n              return (\n                <InstanceRow\n                  key={instance.id}\n                  rowProps={getRowProps({ row })}\n                  instance={instance}\n                  onEditTag={() => onEditTag(instance)}\n                />\n              );\n            })}\n            {/* No Results */}\n            {!rows.length && (\n              <TableRow>\n                <TableCell className=\"no-results-cell\" colSpan={headers.length}>\n                  No Results\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      )}\n    </DataTable>\n  );\n\n  if (error) {\n    return <div className=\"error\">{error.message}</div>;\n  } else if (isLoading) {\n    return (\n      <DataTableSkeleton\n        headers={headers}\n        columnCount={headers.length}\n        showHeader={false}\n        showToolbar={false}\n      />\n    );\n  } else {\n    return renderDataTable();\n  }\n};\n","import React, { useState, useMemo } from 'react';\nimport { InstanceApi } from '@apis/instance-api';\nimport {\n  InstanceTagsModal,\n  useInstanceTagsModal\n} from '@components/InstanceTagsModal';\nimport { debounce } from '@utilities/debounce-util';\nimport { InstancesToolbar } from './InstancesToolbar';\nimport { filterInstances } from './filter-instances';\nimport { InstancesTable } from './InstancesTable';\nimport { createDefaultCriteria } from './InstancesSearch';\n\nconst { useListInstances } = InstanceApi;\n\nexport const InstancesPageContent = () => {\n  const { data: instances = [], isLoading, error, mutate } = useListInstances();\n\n  // Duplicate `searchCriteria` to reduce the number of re-renders.\n  const [searchCriteria, setSearchCriteria] = useState(createDefaultCriteria);\n\n  const filteredInstances = useMemo(\n    () => filterInstances(instances, searchCriteria),\n    [instances, searchCriteria]\n  );\n\n  const statusOptions = useMemo(() => {\n    const set = new Set();\n    instances.forEach(instance => {\n      if (!set.has(instance.status)) {\n        set.add(instance.status);\n      }\n    });\n    return Array.from(set);\n  }, [instances]);\n\n  const ownerOptions = useMemo(() => {\n    const set = new Set();\n    instances.forEach(instance => {\n      if (!set.has(instance.user)) {\n        set.add(instance.user);\n      }\n    });\n    return Array.from(set);\n  }, [instances]);\n\n  const onSearchCriteriaChange = debounce(setSearchCriteria, 400);\n\n  const { modalOpen, editedInstance, openModal, closeModal } =\n    useInstanceTagsModal();\n\n  /**\n   * @param {string[]} newTags\n   */\n  const updateTags = newTags => {\n    const newInstances = [...instances];\n    const instance = newInstances.find(\n      instance => instance.id === editedInstance.id\n    );\n    if (instance) {\n      instance.tags = newTags;\n      mutate(newInstances);\n    }\n  };\n\n  return (\n    <div className=\"instances-page-content\">\n      <InstancesToolbar\n        statusOptions={statusOptions}\n        ownerOptions={ownerOptions}\n        onSearchCriteriaChange={onSearchCriteriaChange}\n      />\n      <InstancesTable\n        instances={filteredInstances}\n        isLoading={isLoading}\n        error={error}\n        onEditTag={openModal}\n      />\n      <InstanceTagsModal\n        open={modalOpen}\n        instance={editedInstance}\n        onSave={updateTags}\n        onClose={closeModal}\n      />\n    </div>\n  );\n};\n","/**\n * @param {(...args: any[]) => void} fn\n * @param {number} delay\n * @returns {(...args: any[]) => void}\n */\nexport const debounce = (fn, delay) => {\n  let timeoutId = undefined;\n  return (...args) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(...args);\n      clearTimeout(timeoutId);\n    }, delay);\n  };\n};\n","/**\n * @param {obect[]} instances\n * @param {object} criteria\n * @returns {object[]}\n */\nexport const filterInstances = (instances, criteria) => {\n  const { name, status, owner } = criteria;\n\n  const filters = [];\n\n  if (name) {\n    filters.push(instance =>\n      instance.name.toLowerCase().includes(name.toLowerCase())\n    );\n  }\n\n  if (status.name) {\n    filters.push(instance =>\n      instance.status.toLowerCase().includes(status.name.toLowerCase())\n    );\n  }\n\n  if (status.options.length) {\n    const set = new Set(status.options);\n    filters.push(instance => set.has(instance.status));\n  }\n\n  if (owner.name) {\n    filters.push(instance =>\n      instance.user.toLowerCase().includes(owner.name.toLowerCase())\n    );\n  }\n\n  if (owner.options.length) {\n    const set = new Set(owner.options);\n    filters.push(instance => set.has(instance.user));\n  }\n\n  if (filters.length) {\n    return instances.filter(instance =>\n      filters.every(filter => filter(instance))\n    );\n  } else {\n    return instances;\n  }\n};\n","import React from 'react';\nimport { BareMetalServer } from '@carbon/icons-react';\nimport { PageHeader } from '@components/PageHeader';\nimport { InstancesPageContent } from './InstancesPageContent';\n\nexport const InstancesPage = () => {\n  return (\n    <div className=\"instances-page\">\n      <PageHeader\n        icon={defaultProps => <BareMetalServer size={defaultProps.size} />}\n        title=\"Instances\"\n        subtitle=\"Overview of your virtual machines\"\n      />\n      <InstancesPageContent />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage = () => {\n  return (\n    <div className=\"not-found-page\">\n      <h1>Not Found</h1>\n      <p className=\"text\">Sorry, we cannot find what your looking for!</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { InstancesPage } from '@pages/Instances';\nimport { NotFoundPage } from '@pages/NotFound';\n\nexport const RouterView = () => {\n  return (\n    <div className=\"router-view\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/instances\" />\n        </Route>\n        <Route exact path=\"/instances\" component={InstancesPage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Theme } from '@carbon/react';\nimport { UIHeader } from '@components/UIHeader';\nimport { RouterView } from '@components/RouterView';\nimport './app.scss';\n\nexport const App = () => {\n  return (\n    <Theme className=\"app\" theme=\"white\">\n      <UIHeader />\n      <RouterView />\n    </Theme>\n  );\n};\n","import React, { StrictMode } from 'react';\nimport './index.scss';\nimport '@carbon/charts-react/styles.css';\n\nimport { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </StrictMode>\n);\n"],"names":["UIHeader","React","HeaderContainer","render","_ref","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","isCollapsible","onClick","isActive","SideNav","isRail","expanded","onOverlayClick","SideNavItems","SideNavLink","renderIcon","Home","large","SideNavDivider","className","Link","to","src","alt","width","style","marginLeft","HeaderName","as","prefix","paddingLeft","process","DEFAULT_ICON_PROPS","size","PageHeader","props","icon","title","subtitle","InstanceApi","fetcher","undefined","require","useSWR","ModalPortal","children","document","createPortal","body","computeTagsStorageKey","instanceId","concat","TAG_PATTERN","isValidTag","tag","test","TagInput","tagSet","onBlur","onSubmitProp","onSubmit","_useState2","_slicedToArray","useState","value","setValue","errorMessage","useMemo","has","e","preventDefault","TextInput","id","hideLabel","placeholder","labelText","invalid","invalidText","onChange","target","InstanceTagsModal","open","instance","onSaveProp","onSave","onCloseProp","onClose","tags","setTags","inputValueAfterBlur","useRef","Set","useEffect","_toConsumableArray","current","checkChanges","changed","length","every","index","confirm","Modal","passiveModal","preventCloseOnClickOutside","modalHeading","name","onRequestClose","map","DismissibleTag","key","type","prev","newTags","splice","removeTag","newTag","Button","push","window","localStorage","setItem","JSON","stringify","storeTags","StatusFilter","criteria","statuses","onNameChange","onOptionCheck","selectedStatuses","options","MenuButton","kind","label","menuAlignment","Search","status","Checkbox","checked","UserAvatar","user","_props$size","firstChar","colorIndex","charCodeAt","classNames","OwnerFilter","users","selectedUsers","htmlFor","createDefaultCriteria","owner","InstancesSearch","statusOptions","ownerOptions","setCriteria","updateCriteria","newCriteria","_useStatusFilterHandl","onStatusNameChange","_objectSpread","onStatusOptionCheck","indexOf","useStatusFilterHandlers","_useOwnerFilterHandle","onOwnerNameChange","onOwnerOptionCheck","useOwnerFilterHandlers","InstancesToolbar","onSearchCriteriaChange","Add","computeTimeAgo","from","arguments","Date","toDate","seconds","getTime","minutes","Math","floor","Number","isNaN","console","warn","hours","days","weeks","months","years","unit","amount","statusTagType","active","canceled","expired","rejected","stopped","InstanceRow","launched_at","expiresAt","rowProps","onEditTag","keyName","key_name","replace","renderMoreTags","count","tooltip","text","Tooltip","Tag","TableRow","TableCell","BareMetalServer","region","provider","_instance$instanceTyp","instanceType","vcpu","memory","disk","computeInstanceType","image","volumes","interface_ip","floating_ip","moreTagsCount","slice","renderTags","Edit","OverflowMenu","flipped","OverflowMenuHorizontal","OverflowMenuItem","itemText","hasDivider","requireTitle","isDelete","headers","header","InstancesTable","instances","isLoading","error","message","DataTableSkeleton","columnCount","showHeader","showToolbar","DataTable","rows","getTableProps","getHeaderProps","getRowProps","Table","TableHead","TableHeader","_extends","TableBody","row","colSpan","useListInstances","InstancesPageContent","fn","delay","timeoutId","_useListInstances","_useListInstances$dat","data","mutate","searchCriteria","setSearchCriteria","filteredInstances","filters","toLowerCase","includes","set","filter","filterInstances","forEach","add","Array","_len","args","_key","clearTimeout","setTimeout","apply","_useInstanceTagsModal","editedInstance","state","setState","modalOpen","openModal","closeModal","useInstanceTagsModal","newInstances","find","InstancesPage","defaultProps","NotFoundPage","RouterView","Switch","Route","exact","path","Redirect","component","App","Theme","theme","createRoot","getElementById","StrictMode","HashRouter"],"sourceRoot":""}